plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
    id "org.openjfx.javafxplugin" version "0.0.8"
}

group "de.randombyte"
version "0.4.0"

sourceCompatibility = 1.8

repositories {
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "no.tornado:tornadofx:1.7.20"
    compile "com.illposed.osc:javaosc-core:0.7"
    compile "org.redundent:kotlin-xml-builder:1.6.0"
    compile "io.github.config4k:config4k:0.4.2"
}

// Shadowing with the jrengelman shadow plugin didn't work for JavaFX/OpenJFX, it wasn't included in the final fat jar
// Though simply copying everything from the runtime classpath to the jar without doing anything fancy (relocating) works
// JavaFX has to be bundled in the jar because often times since Java 11 JavaFX isn't shipped with it anymore
jar {
    manifest {
        attributes "Main-Class": "de.randombyte.lighthub.LightHubKt"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

javafx {
    version = "13"
    modules = [ "javafx.controls" ]
}

compileKotlin.kotlinOptions {
    jvmTarget = "1.8"
    freeCompilerArgs += "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes"
    freeCompilerArgs += "-Xuse-experimental=kotlin.ExperimentalTime"
}
